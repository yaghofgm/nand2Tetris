// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM16K.hdl
/**
 * Memory of 16K 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way(   in= load, 
                sel[2]=address[13],sel[1]=address[12], sel[0]=address[11],
                a=load0, b=load1, c=load2, d=load3, e=load4,f=load5, g=load6, h=load7);

    RAM4K(  in= in, load= load0,
            address[11]=address[11], address[10]=address[10], address[9]=address[9], 
            address[8]= address[8], address[7]=address[7], address[6]=address[6],
            address[5]= address[5], address[4]=address[4], address[3]=address[3],
            address[2]= address[2], address[1]=address[1], address[0]=address[0],
            out=out0);
    RAM4K(  in= in, load= load1,
            address[11]=address[11], address[10]=address[10], address[9]=address[9], 
            address[8]= address[8], address[7]=address[7], address[6]=address[6],
            address[5]= address[5], address[4]=address[4], address[3]=address[3],
            address[2]= address[2], address[1]=address[1], address[0]=address[0],
            out=out1);
    RAM4K(  in= in, load= load2,
            address[11]=address[11], address[10]=address[10], address[9]=address[9], 
            address[8]= address[8], address[7]=address[7], address[6]=address[6],
            address[5]= address[5], address[4]=address[4], address[3]=address[3],
            address[2]= address[2], address[1]=address[1], address[0]=address[0],
            out=out2);
    RAM4K(  in= in, load= load3,
            address[11]=address[11], address[10]=address[10], address[9]=address[9], 
            address[8]= address[8], address[7]=address[7], address[6]=address[6],
            address[5]= address[5], address[4]=address[4], address[3]=address[3],
            address[2]= address[2], address[1]=address[1], address[0]=address[0],
            out=out3);
    RAM4K(  in= in, load= load4,
            address[11]=address[11], address[10]=address[10], address[9]=address[9], 
            address[8]= address[8], address[7]=address[7], address[6]=address[6],
            address[5]= address[5], address[4]=address[4], address[3]=address[3],
            address[2]= address[2], address[1]=address[1], address[0]=address[0],
            out=out4);
    RAM4K(  in= in, load= load5,
            address[11]=address[11], address[10]=address[10], address[9]=address[9], 
            address[8]= address[8], address[7]=address[7], address[6]=address[6],
            address[5]= address[5], address[4]=address[4], address[3]=address[3],
            address[2]= address[2], address[1]=address[1], address[0]=address[0],
            out=out5);
    RAM4K(  in= in, load= load6,
            address[11]=address[11], address[10]=address[10], address[9]=address[9], 
            address[8]= address[8], address[7]=address[7], address[6]=address[6],
            address[5]= address[5], address[4]=address[4], address[3]=address[3],
            address[2]= address[2], address[1]=address[1], address[0]=address[0],
            out=out6);
    RAM4K(  in= in, load= load7,
            address[11]=address[11], address[10]=address[10], address[9]=address[9], 
            address[8]= address[8], address[7]=address[7], address[6]=address[6],
            address[5]= address[5], address[4]=address[4], address[3]=address[3],
            address[2]= address[2], address[1]=address[1], address[0]=address[0],
            out=out7);
    
    Mux8Way16(  a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, 
                sel[2]=address[13],sel[1]=address[12], sel[0]=address[11],
                out=out);    
}
//i accidentally made 32K memory lol